name: run_docker

on:
#  workflow_dispatch:
  workflow_call:
    inputs:
      image_tag:
        required: true
        type: string

jobs:
  evaluate_score:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: Set image tag
#        id: set_image_tag
#        run: |
#          IMAGE_TAG=$(echo "${{ github.event.workflow_run.event.run_id }}")
#          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
#      - name: Set image tag
#        id: set_tag
#        run: |
#          PR_NUMBER="${{ github.event.pull_request.number }}"
#          RUNS=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/actions/runs?event=pull_request&status=completed&pull_request=${PR_NUMBER}" | jq -r '.workflow_runs | length')
#          IMAGE_TAG=${PR_NUMBER}.${RUNS}
#          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Pull Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/cicd_assignment:${{ inputs.image_tag }}

      - name: Run Docker container
        run: docker run ${{ secrets.DOCKER_USERNAME }}/cicd_assignment:${{ env.IMAGE_TAG }}

      - name: Extract score
        id: extract_score
        run: echo "::set-output name=SCORE::0.50" # Replace with your score extraction logic

      - name: Check score
        id: check_score
        run: |
          SCORE=$(echo "${{ steps.extract_score.outputs.SCORE }}")
          if (( $(echo "$SCORE > 0.50" | bc -l) )); then
            echo "Score is greater than 0.50"
            exit 0
          else
            echo "Score is not greater than 0.50"
            exit 1
          fi

      - name: Set output
        id: set_output
        if: steps.check_score.outcome == 'success'
        run: echo "::set-output name=success::true"

      - name: Output result
        if: steps.set_output.outputs.success == 'true'
        run: echo "Score passed threshold"
